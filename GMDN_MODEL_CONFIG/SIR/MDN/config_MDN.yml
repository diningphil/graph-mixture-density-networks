model: gmdn.GMDN
experiment: pydgn.experiment.supervised_task.SupervisedTask
log_every: 5
higher_results_are_better: True
dataset_getter: pydgn.data.provider.DataProvider
device: cuda
num_dataloader_workers: 4
pin_memory: True
seed: 42
grid:
  supervised_config:
    batch_size:
      - 128
    shuffle:
      - True
    number_of_experts:
      - 10
    hidden_units:
      - 64
    num_convolutional_layers:
      - 1 # means no conv. layers, see GMDNTransition class. Different semantic w.r.t. GMDNLinkPrediction
    dirichlet_alpha:
      - 1.0
    epochs:
      - 200
    wrapper:
      - pydgn.training.engine.TrainingEngine
    loss:
      - gmdn_loss.GMDNLoss
    scorer:
      - class_name: pydgn.training.callback.score.MultiScore
        args:
          # used at model selection time. Should be the one on which to perform early stopping
          main_scorer: training.callback.score.LikelihoodScore
          metric3: training.callback.score.DirichletPriorScore
    predictor:
      - gmdn_emission.GraphExpertEmission
    output_type:
      - binomial # binomial # bernoulli # categorical # gaussian # poisson
    expert_hidden_units:
      - 32  # not used, linear model
    neighborhood_aggregation:
      - add
    aggregation:  # global aggregation
      - sum
    optimizer:
      - class_name: pydgn.training.callback.optimizer.Optimizer
        args:
          optimizer_class_name: torch.optim.Adam
          lr:
             0.0001
          weight_decay: 0.  # Useful to constrain magnitude of weights.
          accumulate_gradients: True
    early_stopper:
      #- null
      - class_name:
          - pydgn.training.callback.early_stopping.PatienceEarlyStopper
        args:
          patience:
            - 30
          #monitor: validation_R2 Determination Coefficient
          monitor: validation_True Log Likelihood
          mode: max
          checkpoint: True
    plotter:
      - pydgn.training.callback.plotter.Plotter
